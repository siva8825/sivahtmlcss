async function fabric_renderer(color_config,template_config,init_config,fabric_output,united_color,external_canvas){let canvas_element;if(external_canvas===undefined){canvas_element=document.createElement('canvas');}else{canvas_element=document.getElementById(external_canvas);}
let fabric_canvas=new fabric.Canvas(canvas_element,{preserveObjectStacking:true});fabric_canvas.setWidth(template_config['width']);fabric_canvas.setHeight(template_config['height']);let fe={};for(let i=0;i<template_config['objects'].length;i++){let elem;let item=(init_config['rewrite_params']!==undefined)?rewrite_template(template_config['objects'][i],init_config['rewrite_params']):template_config['objects'][i];if(item['type']==='IText'){let font_id=init_config.objects[item['cat']].font_id;elem=new fabric.IText(init_config.objects[item['cat']]['text'],{fontSize:item['fontSize'],fontFamily:init_config.objects[item['cat']]["font_link"][1],left:position_calc(item['left'],fe),top:position_calc(item['top'],fe),fill:color_config.brand_color,originX:item['originX'],originY:item['originY'],lockUniScaling:true,cat:item['cat'],font_id:font_id,});}
else if(item['type']==='svg'){let svg_id=init_config.objects[item['cat']].svg_id;let fabric_svg=await fabric_svg_loader(loaded_svg[svg_id],'by_string');elem=fabric.util.groupSVGElements(fabric_svg.objects,fabric_svg.options);fabric_change_united_color(elem,color_config.brand_color);elem.set({srcFromAttribute:true,top:position_calc(item['top'],fe),left:position_calc(item['left'],fe),originX:item['originX'],originY:item['originY'],cat:item['cat'],svg_id:svg_id});let temp_image_data=await get_image_data(elem.toDataURL());let real_bound=scan_pixels(temp_image_data);let scale_factor;if(item["max_width"]!==undefined){let desire_width=position_calc(item['max_width'],fe);scale_factor=desire_width/(real_bound.x2-real_bound.x1);elem.scaleToWidth(desire_width);elem.set('left',elem.left-real_bound.x1*scale_factor);}
if(item["max_height"]!==undefined){let desire_height=position_calc(item['max_height'],fe);scale_factor=desire_height/(real_bound.y2-real_bound.y1);elem.scaleToHeight(desire_height);elem.set('top',elem.top-real_bound.y1*scale_factor);}
if(item['originX']==='right'){elem.set('left',elem.left+(temp_image_data.w*scale_factor-real_bound.x2*scale_factor));}}
else if(item['type']==='rect'){elem=new fabric.Rect({top:position_calc(item['top'],fe),left:position_calc(item['left'],fe),width:position_calc(item['width'],fe),height:position_calc(item['height'],fe),fill:color_config.brand_color,originX:item['originX'],originY:item['originY'],cat:item['cat']});}
fe[item['cat']]=elem;}
let group=new fabric.Group(Object.values(fe));let group_bounding_box=group.getBoundingRect();let temp_image_data=await get_image_data(group.toDataURL({}));let group_bound=scan_pixels(temp_image_data);group.set('left',0-group_bound.x1);group.set('top',0-group_bound.y1);fabric_canvas.add(group);elements_group_destroyer(fabric_canvas,group);fabric_canvas.setWidth(group_bound.x2-group_bound.x1);fabric_canvas.setHeight(group_bound.y2-group_bound.y1);fabric_canvas.renderAll();if(united_color!==undefined){let fabric_objects=fabric_canvas._objects;for(let i=0;i<fabric_objects.length;i++){fabric_change_united_color(fabric_objects[i],united_color);}}
return fabric_canvas;}
function position_calc(param,fe){if(typeof param==="number")return param;if(typeof param==="object"){if(Array.isArray(param)){return calculate(position_calc(param[0],fe))(param[1])(position_calc(param[2],fe));}else{return fe[param.based_on][param.value];}}}
const calculate=a=>str=>b=>{switch(str){case '+':return a+b;case '-':return a-b;case '/':return a/b;case '*':return a*b;default:return 'Invalid operation'}};function rewrite_template(object,rewrite_params){if(rewrite_params[object.cat]!==undefined){let params=rewrite_params[object.cat];for(let i=0;i<params.length;i++){object=set_nested_property(object,params[i][0],params[i][1]);}}
return object;}
function set_nested_property(object,[first,...rest],value){if(typeof object[first]!=='object'){object[first]=value;}else{set_nested_property(object[first],rest,value);}
return object;}
function get_nested_property(object,[first,...rest]){if(typeof object[first]!=='object'){return object[first];}else{get_nested_property(object[first],rest);}}